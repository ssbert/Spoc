@{

    Layout = "../Shared/_Layout.cshtml";

}
@model SPOC.User.Dto.Teacher.TeacherInfoInputDto
<script src="~/Scripts/jquery-easyui-extension/Validate.js"></script>

<script src="~/Scripts/plupload-2.1.2/plupload.full.min.js"></script>
<script src="~/Areas/Assets/js/category/categoryCombotreeData.js?v=@L("version")"></script>
<script type="text/javascript">
    var usernameContainEN = "@ViewBag.usernameContainEN";
</script>

<div region="center">
    <div id="toolbar">

        @using (Html.BeginForm("Get", "Teacher", FormMethod.Post, new { @id = "UserFilterForm", @class = "form-inline label label-length-4" }))
        {
            <div class="form-group">
                <label class="form-label">组织架构：</label>
                <select class="easyui-combotree" id="department" name="department" data-options="valueField:'id',textField:'text',width:300,multiple:true,lines:true"></select>
            </div>
            <div class="form-group">
                <label class="form-label">用户名：</label>
                <input id="user_login_name" name="user_login_name" type="text" class="easyui-textbox" style="width: 150px">
            </div>
            <div class="form-group">
                <label class="form-label">手机号：</label>
                <input id="user_mobile" name="user_mobile" type="text" class="easyui-textbox" style="width: 150px">
            </div>
            <div class="form-group">
                <label class="form-label">教师号：</label>
                <input id="teacherCode" name="teacherCode" type="text" class="easyui-textbox" style="width: 150px">
            </div>
            <div class="form-group">
                <label class="form-label">性别：</label>
                <select class="easyui-combobox" name="user_gender" id="user_gender" data-options="editable:false,width:150,panelHeight:'auto'">
                    <option value="">&nbsp;</option>
                    <option value="1">男</option>
                    <option value="2">女</option>

                </select>
                @*    @Html.DropDownListFor(a => a.user_gender, new List<SelectListItem>() { new SelectListItem() { Text = "", Value = "" }, new SelectListItem() { Text = "女", Value = "2" }, new SelectListItem() { Text = "男", Value = "1" } }, new { @class = "easyui-combobox" })*@
            </div>

            <div class="form-group">
                <label class="form-label">职称：</label>
                <select class="easyui-combobox" id="teacherTitle" name="teacherTitle" data-options="valueField:'id',textField:'text',width:100,panelHeight:'auto' "></select>
            </div>
            <div class="form-group">
                <label class="form-label">在职状态：</label>
                <select class="easyui-combobox" name="teacherJobStatusCode" id="teacherJobStatusCode" data-options="editable:false,width:150,panelHeight:'auto'">
                    <option value=""> &nbsp;</option>
                    <option value="1">在职</option>
                    <option value="2">停职</option>
                    <option value="0">离职</option>

                </select>
                @* @Html.DropDownListFor(a => a.teacherJobStatusCode, new List<SelectListItem>() { new SelectListItem() { Text = "", Value = "" }, new SelectListItem() { Text = "在职", Value = "1" }, new SelectListItem() { Text = "停职", Value = "2" }, new SelectListItem() { Text = "离职", Value = "0" } }, new { @class = "easyui-combobox" })*@
            </div>
            <div class="form-group">
                <label class="form-label"></label>
                <a class="easyui-linkbutton" onclick="obj.Filter()"><span class="l-btn-text icon-search l-btn-icon-left">查询</span></a>
                <a class="easyui-linkbutton" onclick="obj.Reset()"><span class="l-btn-text icon-clear l-btn-icon-left">重置</span></a>
            </div>



        }

    </div>

    <table id="dg"></table>

</div>
@section scripts{
<script src="~/Areas/Assets/js/tabHelper.js?@L("version")"></script>
    <script>
        var request = GetRequest();
        var getSingle = function (fn) {
            var rst;
            return function () {
                return rst || (rst = fn());
            };
        };
        function Index() {
            return new Index.prototype.init();
        }

        Index.prototype = {
            constructor: Index,

            GetType: function () { return isEdit == 0 ? "true" : "update"; },

            init: function () {
                $.post('/api/services/app/TeacherInfo/BindCmb').done(function (data) { //获取下拉框

                    var rst = JSON.parse(data.result);
                    $.each(rst, function (i, v) {
                        if (v.type === 'teacherTitleCreate' || v.type === 'teacherTitle') {
                            $('#' + v.type).combobox('loadData', v.datas);
                        } else {
                            $('#' + v.type).combotree('loadData', v.datas);
                        }
                    });
                });
                //   var fullHeight = $(window).height() * 0.916;
                var toorBarH = $("#toolbar").height();
                var fullHeight = $(window).height() - toorBarH - 3;
                datagrid = $("#dg").datagrid({
                    url: VE.AppPath + '/User/Teacher/Get',
                    //   title: '用户信息',
                    rownumbers: true,
                    pagination: true,
                    iconCls: VE.DatagridIconCls,
                    //  height: VE.GridHeight,
                    height: fullHeight,
                    pageSize: VE.PageSize,
                    pageList: VE.PageList,
                    ctrlSelect: true,
                    fitColumns: false,
                    nowrap: false,
                    border: true,
                    singleSelect: false,
                    idField: 'id',
                    sortName: 'createTime',
                    sortOrder: 'desc',
                    onClickCell: function (rowIndex, field, value) {

                        if (field == "user_login_name") {
                            var row = $('#dg').datagrid('getRows')[rowIndex];
                            var userQueryData = { userId: row.user_id };
                            var openDialogData = "userId=" + row.user_id;
                            // User.OpenUserInfoDialog(userQueryData, openDialogData, value);
                            User.OpenUserInfoTalbeDialog(openDialogData, value);
                        }
                    },
                    columns: [
                        [
                            { field: 'ck', checkbox: true },
                            { field: 'id', title: 'id', width: 80, sortable: true, hidden: true },
                            { field: 'user_id', title: 'user_id', width: 80, sortable: true, hidden: true },
                            { field: 'departmentId', title: 'departmentId', width: 80, sortable: true, hidden: true },
                            { field: 'createTime', title: 'createTime', width: 80, sortable: true, hidden: true },
                            {
                                field: 'user_login_name', title: '用户名', width: 120, sortable: true
                                , formatter: function (value, rowData, rowIndex) {
                                    return "<a href='javascript:void(0);' title='点击查看明细'  >" + value + "</a>";
                                }
                            },
                            { field: 'teacherCode', title: '教师号', width: 100, sortable: true },
                            { field: 'user_name', title: '姓名', width: 60, sortable: true },
                            {
                                field: 'user_gender', title: '性别', width: 60, sortable: true,
                                formatter: function (val) { return val == 1 ? "男" : val == 2 ? "女" : ""; }
                            },
                            { field: 'department', title: '组织架构', width: 120, sortable: true },

                            {
                                field: 'teacherTitle', title: '职称', width: 100, sortable: true
                                , formatter: function (value, row, index) {
                                    if (value == 1)
                                        return '教授';
                                    else if (value == 2)
                                        return '副教授';
                                    else if (value == 3)
                                        return '讲师';
                                    else if (value == 4)
                                        return "助教";
                                    else
                                        return "";
                                }
                            },
                            {
                                field: 'teacherJobStatusCode', title: '在职状态', width: 80, sortable: true
                                , formatter: function (value, row, index) {
                                    if (value == 1)
                                        return '在职';
                                    else if (value == 2)
                                        return '停职';
                                    else if (value == 3)
                                        return "离职";
                                    else
                                        return "";
                                }
                            },
                            {
                                field: 'teacherIsRecommend', title: '推荐教师', width: 80, sortable: true
                                , formatter: function (value, row, index) {
                                    if (value == 1)
                                        return '是';
                                    else
                                        return "否";
                                }
                            },
                            {
                                field: 'teacherIsAddCourse', title: '课程权限', width: 80, sortable: true
                                , formatter: function (value, row, index) {
                                    if (value == 1)
                                        return '是';
                                    else
                                        return "否";
                                }
                            },
                            //{ field: 'teacherInviteCode', title: '邀请码', width: 80, sortable: true },
                            {
                                field: ' teacherEnbleFlag', title: '是否禁用', width: 70, sortable: true,
                                formatter: this.formatGraduation

                            },

                            { field: '_operate', title: '操作', width: 180, formatter: this.formatOper }
                            , { field: 'teacherPersonalResume', title: 'teacherPersonalResume', width: 80, sortable: true, hidden: true }
                        ]
                    ],
                    toolbar: [
                        {
                            iconCls: 'icon-reload',
                            text: '刷新',
                            handler: function () {
                            
                                location.reload();
                                $('#fm').form('clear');
                            }
                        }
                
                    ]
                });
            },

            Filter: function () {

                VE.Filter("UserFilterForm", "dg", VE.GridType_DataGrid);
            },
            Reset: function () {
                VE.Clear("UserFilterForm", "dg", VE.GridType_DataGrid);
            },
            checkedItem : function(index) {
                var row = $("#dg").datagrid("getRows")[index];
                evtBus.dispatchEvt("selected_teacher", { userId: row.user_id, userName: row.user_name != "" ? row.user_name : row.user_login_name });
                var tabContainer = stringIsEmpty(request.tabContainer) ? "right_content" : request.tabContainer;
                var tabHelper = new TabHelper(tabContainer);
                tabHelper.closeTab();
            },
       
            formatOper: function (val, row, index) {
           
                var options = {
                    option: [
                        {
                            title: "选择",
                            text: "选择",
                            icon: "icon-add",
                            onclick: "obj.checkedItem"
                        }
                    ]
                };

                return linkbtn(index, options);
            },
            formatGraduation: function (val) {

                if (val == 1) return "<span style=\"display:inline-block;height:16px;width:16px;\" class=\"icon-active_true\"></span>";
                else return "<span style=\"display:inline-block;height:16px;width:16px;\" class=\"icon-busy\"></span>";

            }
            , formatActive: function (val) {

                if (val == 1) return "<span style=\"display:inline-block;height:16px;width:16px;\" class=\"icon-lock\"></span>";
                else return "<span style=\"display:inline-block;height:16px;width:16px;\" class=\"icon-unlock\"></span>";
            }  

        };

 
        Index.prototype.init.prototype = Index.prototype;
        var createObj = getSingle(Index);
        var obj = createObj();


        $(function () {
            //初始化回车事件
            VE.Enter("obj.Filter");
            //  Inint();
            obj.init();
        });


    </script>

}
