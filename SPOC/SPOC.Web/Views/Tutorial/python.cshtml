
@{
    ViewBag.Title = "Python";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

	<div class="cplus-course-page container-box center">
		<div class="catalogue-btn text-center fillet">目录</div>
		<div class="row">
			<!-- 左侧选项卡-S -->
			<div class="slide col-lg-3 col-md-3 col-sm-3">
				<h3 class="green">Python2 教程</h3>
				<div class="slide-lists">
					<ul>
						<li>
							<a href="#tutorial" data-name="tutorial.html">
								Python 基础教程
							</a>
						</li>
						<li>
							<a href="#intro" data-name="intro.html">
								Python 简介
							</a>
						</li>
						<li>
							<a href="#install" data-name="install.html">
								Python 环境搭建
							</a>
						</li>
						<li>
							<a href="#chineseEncoding" data-name="chineseEncoding.html">
								Python 中文编码
							</a>
						</li>
						<li>
							<a href="#basicSyntax" data-name="basicSyntax.html">
								Python 基础语法
							</a>
						</li>
						<li>
							<a href="#variableTypes" data-name="variableTypes.html">
								Python 变量类型
							</a>
						</li>
						<li>
							<a href="#operators" data-name="operators.html">
								Python 运算符
							</a>
						</li>
						<li>
							<a href="#ifStatement" data-name="ifStatement.html">
								Python 条件语句
							</a>
						</li>

						<li>
							<a href="#loops" data-name="loops.html">
								Python 循环语句
							</a>
						</li>
						<li>
							<a href="#whileLoop" data-name="number.html">
								Python While 循环语句
							</a>
						</li>
						<li>
							<a href="#forLoop" data-name="forLoop.html">
								Python for 循环语句
							</a>
						</li>
						<li>
							<a href="#nestedLoops" data-name="nestedLoops.html">
								Python 循环嵌套
							</a>
						</li>
						<li>
							<a href="#breakStatement" data-name="breakStatement.html">
								Python break 语句
							</a>
						</li>
						<li>
							<a href="#continueStatement" data-name="continueStatement.html">
								Python continue 语句
							</a>
						</li>
						<li>
							<a href="#passStatement" data-name="passStatement.html">
								Python pass 语句
							</a>
						</li>
						<li>
							<a href="#numbers" data-name="numbers.html">
								Python Number(数字)
							</a>
						</li>
						<li>
							<a href="#strings" data-name="strings.html">
								Python 字符串
							</a>
						</li>
						<li>
							<a href="#lists" data-name="lists.html">
								Python 列表(List)
							</a>
						</li>
						<li>
							<a href="#tuples" data-name="tuples.html">
								Python 元组
							</a>
						</li>
						<li>
							<a href="#dictionary" data-name="dictionary.html">
								Python 字典(Dictionary)
							</a>
						</li>
						<li>
							<a href="#dateTime" data-name="dateTime.html">
								Python 日期和时间
							</a>
						</li>
						<li>
							<a href="#functions" data-name="functions.html">
								Python 函数
							</a>
						</li>
						<li>
							<a href="#modules" data-name="modules.html">
								Python 模块
							</a>
						</li>
						<li>
							<a href="#filesIo" data-name="filesIo.html">
								Python 文件I/O
							</a>
						</li>
						<li>
							<a href="#fileMethods" data-name="fileMethods.html">
								Python File(文件) 方法
							</a>
						</li>
						<li>
							<a href="#exceptions" data-name="fileMethods.html">
								Python 异常处理
							</a>
						</li>
						<li>
							<a href="#osFileMethods" data-name="osFileMethods.html">
								Python OS 文件/目录方法
							</a>
						</li>
						<li>
							<a href="#builtInFunctions" data-name="builtInFunctions.html">
								Python 内置函数
							</a>
						</li>
						
					</ul>
				</div>
				<h3 class="green">Python 高级教程</h3>
				<div class="slide-lists">
					<ul>
						<li>
							<a href="#object" data-name="object.html">
								Python 面向对象
							</a>
						</li>
						<li>
							<a href="#regExpressions" data-name="regExpressions.html">
								Python 正则表达式
							</a>
						</li>
						<li>
							<a href="#cgi" data-name="cgi.html">
								Python CGI编程
							</a>
						</li>
						<li>
							<a href="#mysql" data-name="mysql.html">
								Python 操作mysql数据库
							</a>
						</li>
						<li>
							<a href="#socket" data-name="socket.html">
								Python 网络编程
							</a>
						</li>
						<li>
							<a href="#email" data-name="email.html">
								Python SMTP发送邮件
							</a>
						</li>
						<li>
							<a href="#multithreading" data-name="multithreading.html">
								Python 多线程
							</a>
						</li>
						<li>
							<a href="#xml" data-name="xml.html">
								Python XML解析
							</a>
						</li>
						<li>
							<a href="#guiTkinter" data-name="guiTkinter.html">
								Python GUI编程(Tkinter)
							</a>
						</li>
						<li>
							<a href="#python2x3x" data-name="python2x3x.html">
								Python 2.x与3​​.x版本区别
							</a>
						</li>
						<li>
							<a href="#ide" data-name="ide.html">
								Python IDE
							</a>
						</li>
						<li>
							<a href="#json" data-name="json.html">
								Python JSON
							</a>
						</li>
					</ul>
				</div>
			</div>
			<!-- 左侧选项卡-E -->
			<!-- 右侧内容-S -->
			<div class="tab-content col-lg-9 col-md-9 col-sm-9 col-xs-12">

			</div>
			<!-- 右侧内容-E -->
		</div>
	</div>
<script type="text/javascript" src="~/Scripts/jquery-3.2.1.js"></script>
<script type="text/javascript" src="~/Scripts/highlight/highlight.pack.js"></script>
<script type="text/javascript" src="~/js/main.js"></script>
	<script type="text/javascript">
		$(function(){

			var leftItem = $('.slide-lists a'),
				slide = $('.slide'),
				slideList = $('.slide-lists'),
				btn = $('.catalogue-btn'),
				content = $('.tab-content');

			setSlideList(slide, btn);

			// 监听刷新后改变状态
			window.onload = function(e){
				window.location.hash = "tutorial";
			}

			// 初始化
            getPage('/Content/python2/page/tutorial.html', '#tutorial' );

			//监听url地址栏hash值改变的事件
			window.onhashchange = function(e){
				hash = e.target.location.hash;
                url = '/Content/python2/page/' + hash.slice(1) + ".html"
				getPage(url,hash);
			}

			//设置左栏选定状态方法
			function setActive (hash){
				leftItem.each(function(index,value){
					var obj = $(value);
					obj.parent('li').removeClass('active');
					if(obj.attr('href') == hash){
						obj.parent('li').addClass('active').siblings().removeClass('active');
					}
				})
			}

			// 设置高亮方法
			function setHighLinght(){
				hljs.initHighlighting.called = false;
				hljs.initHighlighting();
			}

			//ajax请求数据
			function getPage(url,hash) {
				$.ajax({
					method: 'GET',
					url: url,
					success: function(data){
						setActive(hash);
						content.html(data);
						setHighLinght();
						$(window).scrollTop(0);
					}
				})
			}

		})
	</script>