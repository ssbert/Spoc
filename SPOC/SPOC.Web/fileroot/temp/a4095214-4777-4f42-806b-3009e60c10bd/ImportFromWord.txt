[试题分类]:试卷分类

1.{
我公司的全称是“广东移动通信有限责任公司深圳公司”,
英文名称是:Guangdong Mobile Communications Co., LTD. Shenzhen Branch

}
答案:正确
分数:0
题型:判断题
答题时间:00:00:00
试题排序号:33

[试题分类]:试题分类

2.{
办理10人以上VPMN业务,凡每月___日受理的,优惠设置成功后,可于下月1日生效。凡每月___受理的,优惠设置成功后,于下下月1日生效。
}
答案按顺序:是
答案:1—24|25—月末最后一天
分数:0
题型:填空题
答题时间:00:00:00
试题排序号:41

[试题分类]:第3课了解一般软件开发

3.{
您已开发完一种新软件应用程序。为确保软件质量，您需要验证每个方法或函数是否都有适当的测试用例可用。您应使用哪种测试方法？
}
A.白盒测试
B.黑盒测试
C.Alpha 测试
D.Beta 测试
答案:A
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解测试
黑盒测试将软件视为“黑盒”，仅关注输入和输出。另一方面，白盒测试用于确保每个方法或函数都有适当的测试用例可用。Alpha 和 Beta 测试都是黑盒类型的测试。
}
试题排序号:18

[试题分类]:试题分类

4.{
一些C ++数据类型，格式说明符以及它们最常见的位宽如下：
         Int（“％d”）： 32位整数
         Long（“％ld”）： 64位整数
         Char（“％c”）：字符类型
         Float（“％f”）： 32位真实值
    Double（“％lf”）： 64位实际值
参数读取
要读取数据类型，请使用以下语法：
main()函数及其参数
C++标准允许主函数main()有或没有参数列表。 您能在主函数main()中使用一个或更多的参数。 如下是一些惯例:
int main(int argc, char *argv[])
第一个参数argc，指明有多少个参数将被传递给主函数main(),真正的参数以字符串数组（即第2个参数argv[]）的形式来传递。每一个字符串均有自己意思。在这句法上面, 记住, argc代表参数的数量, main()函数本身是在索引0为的第一参数。 所以, argc总是至少为1 。它的总数是从argv列阵的元素数目。 这意味着, argv[0]的值是至关重要的。 如果用户在控制台环境中程序名称后键入含参数的指令, 那么随后的参数将传递给argv[1] 。 例如, 如果程序名称为main,并且已经事先编译好了，这时如果用户键入:
D:/MyPrograms/AConsoleApp/main 68

值68将会传递给argv[1]
因为参数argv是一些字符串，将这些字符串转换为你需要的值就是我们需要做的一项任务了,
当然C/C++编译器为我们提供了一些转换函数，你可以用atoi()函数把字串68转换为整形。同样，你可以用atof()函数把字串1250.50转换为double类型
 
atoi函数（将字符串转换成整型数 int）
atof（将字符串转换成浮点型数 float） 
atol（将字符串转换成长整型数 float） 
 
打印
要打印数据类型，请使用以下语法：
printf("`format_specifier`", val)
例如，要打印一个字符后跟一个double：
char ch = 'd';
double d = 234.432;
printf("%c %lf", ch, d);
注意：你也可以使用cout代替printf ; 但是，如果您将一百万个数字作为输入并打印一百万行，则使用printf会更快。
输入格式
输入由以下空格分隔的值组成：int，long，char，float和double。
输出格式
按照接收到的输入顺序打印新行中的每个元素。请注意，float值精确到小数点后3位,而double类型精确到小数点后9位。
示例输入
3 12345678912345 a 334.23 14049.30493
示例输出
3
12345678912345
a
334.230
14049.304930000
说明
打印int 3，
接着是long 12345678912345
接着是char a， 
接着是float 334.23，
 接着是double 14049.30493。
 
 

}
答案:{
3
12345678912345
a
334．230
14049．304930000
}
分数:0
题型:编程题
答题时间:00:00:00
输入流参数:3 12345678912345 a 334.23 14049.30493
参考代码:{
#include &lt;iostream&gt; 
using std::cin; 
using std::cout; 
using std::endl; 
using std::fixed; 
int main() \{ 
int a; long b; char c; float d; double e; 
cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;e; 
cout&lt;&lt;a&lt;&lt;endl; 
cout&lt;&lt;b&lt;&lt;endl; 
cout&lt;&lt;c&lt;&lt;endl; 
cout．precision(3); 
cout&lt;&lt;fixed&lt;&lt;d&lt;&lt;endl; 
cout．precision(9); 
cout&lt;&lt;fixed&lt;&lt;e&lt;&lt;endl; 
return 0; 
\}
}
试题排序号:0

[试题分类]:第3课了解一般软件开发

5.{
您计划为组织开发一种新软件系统。您需要检查系统的技术蓝图。下面哪个参与者负责提供此技术蓝图？
}
A.用户界面设计师
B.开发人员
C.架构师
D.技术文档撰写人
答案:C
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解应用程序生命周期管理
架构师设计系统的技术蓝图。其中包括确定组件和服务、它们的行为以及它们彼此交互、与外部环境交互的方式。
}
试题排序号:13

[试题分类]:第3课了解一般软件开发

6.{
在您的应用程序中，您使用队列数据结构处理信息。您需要了解队列中是否有数据项，但您实际上还不需要处理该数据项。您将使用下面哪个队列操作？
}
A.enqueue
B.dequeue
C.peek
D.contains
答案:D
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解队列
contains 操作允许您确定队列中是否有特定项。peek 操作允许您查看最前面的当前项，但不实际将其从队列中移除。enqueue 操作用于将项目添加到队列末尾。dequeue 操作用于移除队列最前面的当前元素。
}
试题排序号:23

[试题分类]:第3课了解一般软件开发

7.{
您计划为组织开发一种新软件系统。某人需要负责开发系统手册和帮助文件。您应确定让下面哪个参与者完成此任务？
}
A.用户界面设计师
B.内容开发人员
C.用户界面设计师
D.技术文档撰写人
答案:D
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解应用程序生命周期管理
确定让技术文档撰写人完成此任务。技术文档撰写人需开发与应用程序一起交付的系统手册和帮助文件。
}
试题排序号:14

[试题分类]:第3课了解一般软件开发

8.{
您正在开发一个对数据执行频繁插入和删除操作的程序。您的需求也决定了在用户单击上一个或下一个按钮时访问上一个和下一个记录的功能。下面哪个数据结构最符合您的需求？
}
A.数组
B.循环链表
C.链接列表
D.双重链接列表
答案:D
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解链接列表
因为您需要执行频繁插入和删除操作，所以使用链接列表比使用数组好。此外，因为您需要访问上一个和下一个记录，所以必须使用双重链接列表。链接列表和循环链表允许您仅按一个方向遍历。
}
试题排序号:30

[试题分类]:试题分类

9.{
办理10人以上VPMN业务,凡每月___日受理的,优惠设置成功后,可于下月1日生效。凡每月___受理的,优惠设置成功后,于下下月1日生效。

}
答案按顺序:是
答案:1—24|25—月末最后一天
分数:0
题型:填空题
答题时间:00:00:00
试题排序号:39

[试题分类]:第3课了解一般软件开发

10.{
您正在开发一个使用单向链接列表的 C# 程序。您需要遍历列表的所有节点。您需要使用下面哪个项目实现此要求？
}
A.指向头节点的链接
B.指向尾节点的链接
C.头节点中的数据
D.尾节点中的数据
答案:A
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解链接列表
链接列表中的每个节点都包含两条信息:对应于该节点的数据和指向下一节点的链接。列表的第一个节点被称为头节点。使用此链接，可以转到下一个节点，并继续遍历节点，直至最后一个链接值为空值。
}
试题排序号:28

[试题分类]:第3课了解一般软件开发

11.{
您正在开发一种新应用程序，用于优化处理仓库的操作。当产品抵达时，会存储到仓库架上。为最大程度地减少检索物料项目的时间，最后抵达的物料项目需先运出。您需要在数据结构中显示抵达和离开仓库的物料项目。您应使用哪种数据结构来表示此情况？
}
A.数组
B.链接列表
C.堆栈
D.队列
答案:C
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解数据结构
堆栈 是一个物料项目集合，其中最后一个添加到该集合的项目是第一个要移除的项目。
}
试题排序号:21

[试题分类]:第3课了解一般软件开发

12.{
您正在开发一种新软件应用程序。在收到缺陷报告后，您采取必需的措施修复缺陷。您需要确保每个新的修复不会破坏之前可用的任何功能。您应使用哪种类型的测试？
}
A.集成测试
B.系统测试
C.验收测试
D.回归测试
答案:D
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解测试
在报告并修复软件应用程序中的缺陷时，您需要确保每个新的修复不会破坏之前可用的任何功能。在这种情况下，回归测试可派上用场。对于每个新的修复，软件测试人员通常会运行一组回归测试以确保已知可正常工作的每个功能仍将工作。
}
试题排序号:17

[试题分类]:试题分类

13.{
我公司的全称是“广东移动通信有限责任公司深圳公司”,
英文名称是:Guangdong Mobile Communications Co., LTD. Shenzhen Branch

}
答案:正确
分数:0
题型:判断题
答题时间:00:00:00
试题排序号:38

[试题分类]:试题分类

14.{
1860,1861开通前我公司的服务热线号码是多少？
}
A.3889999
B.3209999
C.3889000
D.3889175
答案:B
分数:2
题型:单选题
答题时间:00:00:00
难度:5
试题分析:{
这个是试题分析
}
试题排序号:36

[试题分类]:第3课了解一般软件开发

15.{
下面哪个链接列表相关陈述不正确？
}
A.链接列表不允许随机访问其项目。
B.指向头节点的链接可帮助您找到链接列表中的所有节点。
C.链接列表中的项目必须存储在连续内存位置中。
D.使用链接列表可非常快地执行插入和删除操作。
答案:C
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解链接列表
链接列表是一个节点集合，其中每个节点都包含指向序列中下一个节点的引用（或链接）。与在数组中不同，链接列表中的项目不必是连续的；因此在必须添加更多项目时链接列表不需要重新分配整个列表的内存空间。
}
试题排序号:29

[试题分类]:第3课了解一般软件开发

16.{
您正在开发一种使用二维数组的应用程序。您使用下列代码声明该数组：

int[,] numbers = new int[,]
\{
    \{ 11, 7, 50, 45, 27  \},
    \{ 18, 35, 47, 24, 12 \},
    \{ 89, 67, 84, 34, 24 \},
    \{ 67, 32, 79, 65, 10 \}
\};

接着，您使用表达式 numbers[2, 3] 引用数组元素。此表达式将返回下面哪个值？
}
A.47
B.84
C.24
D.34
答案:D
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解数组
在 .NET Framework 中，所有数组均从零开始。二维数组可被视为表格，其中每个单元格都是一个数组元素，均可使用其所属行和列的编号寻址。行号和列号都按零进行索引。例如，表达式 number[2, 3] 将引用数组第三行第四列中的项目，此时值为 34。
}
试题排序号:22

[试题分类]:第3课了解一般软件开发

17.{
您正在研究各种排序算法，以便了解、分析和比较各种排序技术。使用 BubbleSort 算法时应使用下面哪种技术？
}
A.比较
B.比较和交换
C.比较和分区
D.分区和交换
答案:B
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解排序算法
BubbleSort 算法使用一系列比较和交换操作按正确的顺序排列列表元素。
}
试题排序号:27

[试题分类]:试题分类

18.{
加法,从标准输入流中获得两个整数,将两个整数相加,输出相加结果,若相加结果大于10则输出0。

}
答案:3|7|0
分数:0
题型:编程题
答题时间:00:00:00
输入流参数:1 2|3 4|5 6
多次测试:是
参考代码:{
#include &lt;iostream&gt;
using namespace std;
int main()\{
int a, b, c;
cin &gt;&gt; a &gt;&gt; b;
c = a + b;
if (c &gt; 10) \{

c = 0;

\}
cout&lt;&lt;c;
\}

}
辅标签:循环
主标签:基本输入输出,数组
试题排序号:40

[试题分类]:试卷分类

19.{
广东移动在市场扩张期的发展经过了哪些阶段
}
A.小步快跑阶段
B.集约发展阶段
C.大步跨越阶段
D.规模发展阶段
答案:A|C|D
分数:0
题型:多选题
答题时间:00:00:00
试题排序号:32

[试题分类]:试卷分类

20.{
办理10人以上VPMN业务，凡每月___日受理的，优惠设置成功后，可于下月1日生效。凡每月___受理的，优惠设置成功后，于下下月1日生效。
}
答案按顺序:否
答案:1—24|25—月末最后一天
分数:0
题型:填空题
答题时间:00:00:00
试题排序号:34

[试题分类]:第3课了解一般软件开发

21.{
您已开发完一种新软件应用程序的几个主要功能。您计划让重要客户及早看到此产品，以便收集一些初期反馈。您的应用程序仍缺少功能，并且您尚未优化应用程序以提高性能和安全性。您应向有限数量的重要客户执行哪种测试？
}
A.白盒测试
B.黑盒测试
C.Alpha 测试
D.Beta 测试
答案:C
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解测试
Alpha 测试（由有限的一组用户执行）提供了让最重要的客户及早看到产品以及收集反馈的机会。Alpha 版本可能缺少某些功能，通常没有许多非功能性属性，如性能。在下一个测试级别（Beta 测试）中，您需向更广泛的客户受众发布产品并征求反馈。在功能方面，软件的 Beta 版本与最终版本很接近。但是，开发团队仍会致力于提高性能，修复已知缺陷。
}
试题排序号:19

[试题分类]:第3课了解一般软件开发

22.{
您正在开发一种排序算法，以便使用分区和比较操作按正确的顺序排列一个数字数组。您编写了一种方法，用于划分数组，以使不到 pivot 的项目转到左侧，而超过 pivot 的项目转到右侧。此分区方法具有以下签名：

static int Partition (int[] numbers, int left, 
  int right, int pivotIndex)

您应使用下面哪种算法对使用 Partition 方法的数组排序？
}
A.static int[] QuickSort(int[] numbers,
       int left, int right)
{
    if (right &gt; left)
    {
        int pivotIndex = left + (right - left) / 2;
        pivotIndex = Partition(
            numbers, left, right, pivotIndex);
        QuickSort(
            numbers, left, pivotIndex - 1);
        QuickSort(
            numbers, pivotIndex + 1, right);
    }
    return numbers;
}

B.static int[] QuickSort(int[] numbers,
       int left, int right)
{
    if (right &gt; left)
    {
        int pivotIndex = left + (right - left) / 2;
        pivotIndex = Partition(
            numbers, left, right, pivotIndex);
        QuickSort(
            numbers, left, pivotIndex);
        QuickSort(
            numbers, pivotIndex + 1, right);
    }
    return numbers;
}

C.static int[] QuickSort(int[] numbers,
       int left, int right)
{
    if (right &gt; left)
    {
        int pivotIndex = left + (right - left) / 2;
        pivotIndex = Partition(
            numbers, left, right, pivotIndex);
        QuickSort(
            numbers, left, pivotIndex - 1);
        QuickSort(
            numbers, pivotIndex, right);
    }
    return numbers;
}

D.static int[] QuickSort(int[] numbers,
       int left, int right)
{
    if (right &gt; left)
    {
        int pivotIndex = left + (right - left) / 2;
        pivotIndex = Partition(
            numbers, left, right, pivotIndex);
        QuickSort(
            numbers, left, pivotIndex + 1);
        QuickSort(
            numbers, pivotIndex + 1, right);
    }
    return numbers;
}

答案:A
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解 QuickSort
在对数组分区后，只需对数组左侧和右侧排序。中间元素会自动排序。要对左侧数组排序，请使用表达式 QuickSort( numbers, left, pivotIndex - 1)；要对右侧数组排序，应使用表达式 QuickSort(numbers, left, pivotIndex + 1)。
}
试题排序号:26

[试题分类]:第3课了解一般软件开发

23.{
您计划为组织开发一种新软件系统。您需要检查软件打包、部署、交付和支持的计划。您应联系下面哪个参与者？
}
A.质量保证经理
B.发布经理
C.技术架构师
D.数据库管理员
答案:B
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解应用程序生命周期管理
发布管理包括打包和部署软件、管理软件缺陷和管理软件更改请求等活动。发布经理需协调各个团队和业务单位，以确保及时发布软件产品。
}
试题排序号:16

[试题分类]:试卷分类

24.{
1860,1861开通前我公司的服务热线号码是多少？

}
A.
3889999

B.
3209999

C.
3889000

D.
3889175

答案:B
分数:2
题型:单选题
答题时间:00:00:00
难度:5
试题分析:{
这个是试题分析

}
试题排序号:31

[试题分类]:第3课了解一般软件开发

25.{
在您的应用程序中，您使用堆栈数据结构处理信息。您需要找到接下来将处理哪个数据项，但是您实际上还不需要处理该数据项。您将使用下面哪个队列操作？
}
A.pop
B.push
C.peek
D.contains
答案:C
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解堆栈
peek 操作允许您查看堆栈顶部的当前项，但不实际移除它。contains 操作允许您确定堆栈中是否有特定项。push 操作用于将项目添加到堆栈顶部。pop 操作用于移除堆栈顶部的元素。
}
试题排序号:25

[试题分类]:第3课了解一般软件开发

26.{
您正在开发一种使用堆栈数据结构的应用程序。您编写以下代码：

Stack first = new Stack();
first.Push(50);
first.Push(45);
first.Pop();
first.Push(11);
first.Pop();
first.Push(7);

在执行这些语句后，堆栈从上至下包含哪些内容？
}
A.7, 11, 50
B.7, 45
C.7, 50
D.7, 11, 45
答案:C
分数:2
题型:单选题
答题时间:00:00:00
试题分析:{
难度:中等
章节参考:了解堆栈
在执行第一个语句后，堆栈的内容是 (50)。在执行第二个语句后，堆栈从上至下的内容是 (45, 50)。在执行第三个语句后，会抛出顶部元素，因此内容是 (50)。在执行第四个语句后，会将另一个元素添加到顶部，因此内容是 (11, 50)。在执行第五个语句后，会抛出顶部元素，因此内容是 (50)。最后，执行第六个语句，堆栈的结果是 (7, 50)。
}
试题排序号:24

[试题分类]:试题分类

27.{
对一、二、三、进行阿拉伯数字随机排序___、___、___。

}
答案按顺序:否
答案:1|2|3
分数:10
题型:填空题
答题时间:00:00:00
试题排序号:0

[试题分类]:试题分类

28.{
广东移动在市场扩张期的发展经过了哪些阶段
}
A.小步快跑阶段
B.集约发展阶段
C.大步跨越阶段
D.规模发展阶段
答案:A|C|D
分数:0
题型:多选题
答题时间:00:00:00
试题排序号:37

[试题分类]:试题分类

29.{
212121212121212办理10人以上VPMN业务,凡每月___日受理的,优惠设置成功后,可于下月1日生效。凡每月___受理的,优惠设置成功后,于下下月1日生效。
}
答案按顺序:否
答案:1—24|25—月末最后一天
分数:0
题型:填空题
答题时间:00:00:00
试题排序号:42

[试题分类]:试卷分类

30.{
加法，从标准输入流中获得两个整数，将两个整数相加，输出相加结果，若相加结果大于10则输出0。

}
答案:3|7|0
分数:0
题型:编程题
答题时间:00:00:00
输入流参数:1 2|3 4|5 6
多次测试:是
参考代码:{
#include &lt;iostream&gt;
using namespace std;
int main()\{
int a, b, c;
cin &gt;&gt; a &gt;&gt; b;
c = a + b;
if (c &gt; 10) \{
c = 0;
\}
cout&lt;&lt;c;
\}
}
辅标签:循环
主标签:基本输入输出,数组
试题排序号:35
 
