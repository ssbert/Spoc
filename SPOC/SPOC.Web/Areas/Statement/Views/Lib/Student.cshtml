
@{
    ViewBag.Title = "Student";
    Layout = "~/Areas/AdminHome/Views/Shared/_Layout.cshtml";
}

<div region="center">
    <div id="toolbar">
        <form id="query-form" class="form-inline label label-length-4">
            <div class="form-group">
                <label class="form-label">教学班级：</label>
                <input id="classIds" class="easyui-combotree" style="width: 400px;" data-options="
                        url:'/api/services/app/Department/GetDepartmentTree',
                        method:'post',
                        valueField:'id',
                        textField:'text',
                        multiple:true,
                        panelHeight:'auto'" />
            </div>
            <div style="clear: right;"></div>
            <div class="form-group">
                <label class="form-label">姓名：</label>
                <input id="userFullName" name="userFullName" class="easyui-textbox" style="width: 200px;" />
            </div>
            <div class="form-group">
                <label class="form-label">用户名：</label>
                <input id="userLoginName" name="userLoginName" class="easyui-textbox" style="width: 200px;" />
            </div>

            <div class="form-group">
                <label class="form-label"></label>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search'" onclick="statement.query()">查询</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-clear'" onclick="$('#query-form').form('reset')">重置</a>
            </div>
        </form>
        <a href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconCls="icon-page_white_excel" onclick="statement.export()">导出</a>
    </div>
    <table id="dg" class="easyui-datagrid" pagination="true" rownumbers="true" singleSelect="true" toolbar="#toolbar" fit="true" pageNum="1" pageSize="30">
        <thead>
            <tr>
                <th field="userFullName" sortable="true">姓名</th>
                <th field="userLoginName" sortable="true">用户名</th>
                <th field="className" sortable="true">教学班级</th>
                <th field="masterNum" sortable="true" formatter="masterNumFormatter">掌握</th>
                <th field="failNum" sortable="true" formatter="failNumFormatter">未掌握</th>
                <th field="unskilledNum" sortable="true" formatter="unskilledNumFormatter">不稳定</th>
                <th field="emptyNum" sortable="true" formatter="emptyNumFormatter">无反馈</th>
                <th field="labelNum" sortable="true" formatter="labelNumFormatter">知识点总数</th>
                <th field="masterRate" formatter="masterRateFormatter" sortable="true">掌握比率</th>
                <th field="opt" formatter="optFormatter">操作</th>
            </tr>
        </thead>
    </table>
</div>

@section scripts
{
    <script src="~/Areas/Assets/js/tabHelper.js"></script>
    <script>
        var linkTemp = '<a href="javascript:void(0)" onclick="statement.showUserLabelStatement(\'{0}\', {1})">{2}</a>';
        function masterNumFormatter(val, row) {
            return  linkTemp.format(row.userId, 3, val);
        }

        function failNumFormatter(val, row) {
            return linkTemp.format(row.userId, 1, val);
        }

        function unskilledNumFormatter(val, row) {
            return linkTemp.format(row.userId, 2, val);
        }

        function emptyNumFormatter(val, row) {
            return linkTemp.format(row.userId, -1, val);
        }

        function labelNumFormatter(val, row) {
            return linkTemp.format(row.userId, 0, val);
        }

        function masterRateFormatter(val) {
            return val.toFixed(2) + "%";
        }

        function optFormatter(val, row, index) {
            return linkbtn(index,
                {
                    option: [
                        {
                            title: "查看知识图谱",
                            text: "查看知识图谱",
                            icon: "icon-map",
                            onclick: "statement.showStructureMap"
                        }
                    ]
                });
        }

        var StudentLibStatement = (function() {
            var queryParam = { skip: 0, pageSize: 30 };
            var tabHelper = new TabHelper("tabs");

            function init() {
                this.query = function() {
                    queryParam.skip = 0;
                    setParam();
                    loadData(queryParam);
                };

                this.export = function() {
                    var newWindow = window.open("");
                    setParam();
                    $("#dg").datagrid("loading");
                    var url = "/Statement/Lib/ExportStudent";
                    nv.post(url,
                        queryParam,
                        function(data) {
                            $("#dg").datagrid("loaded");
                            newWindow.location.href = "/Statement/Lib/Download/" + data.result.id + "?fileName=学生知识点报表";
                        });
                };

                this.initPagination = function() {
                    $("#dg").datagrid({
                            onSortColumn: function(sort, order) {
                                queryParam.sort = sort;
                                queryParam.order = order;
                                loadData(queryParam);
                            }
                        })
                        .datagrid("getPager")
                        .pagination({
                            onSelectPage: function(pageNumber, pageSize) {
                                queryParam.pageNumber = pageNumber;
                                queryParam.skip = (pageNumber - 1) * pageSize;
                                if (queryParam.skip < 0) {
                                    queryParam.skip = 0;
                                }
                                queryParam.pageSize = pageSize;
                                loadData(queryParam);
                            },
                            onChangePageSize: function(pageSize) {
                                queryParam.pageSize = pageSize;
                                loadData(queryParam);
                            }
                        });
                };

                this.showUserLabelStatement = function(userId, proficiency) {
                    var url = "/Statement/Lib/UserLabelStatement?userId={0}&proficiency={1}"
                        .format(userId, proficiency);
                    tabHelper.openTab("知识点掌握情况", url, "icon-06");
                }

                this.showStructureMap = function(index) {
                    var row = $("#dg").datagrid("getRows")[index];
                    var url = "/Statement/Lib/StructureMap?userId=" + row.userId;
                    tabHelper.openTab("知识图谱", url, "icon-map");
                };

                function setParam() {
                    var nodes = $('#classIds').combotree("tree").tree('getChecked');
                    var classIds = [];
                    $.each(nodes,
                        function(k, v) {
                            if (!v.children || v.children.length === 0) {
                                classIds.push(v.id);
                            }
                        });
                    queryParam.classIdList = classIds;
                    queryParam.userLoginName = $("#userLoginName").textbox("getValue");
                    queryParam.userFullName = $("#userFullName").textbox("getValue");
                }

                function loadData(param) {
                    $("#dg").datagrid("loading");
                    var url = apiUrl + "LibLabelStatement/StudentLabelGettingList";
                    nv.post(url,
                        param,
                        function(data) {
                            $("#dg").datagrid("loaded");
                            if (data.success) {
                                $("#dg")
                                    .datagrid("loadData", data.result.rows)
                                    .datagrid("getPager")
                                    .pagination({
                                        pageNumber: param.pageNumber,
                                        total: data.result.total
                                    });
                            } else {
                                $.messager.alert("提示", data.error.message, "info");
                            }
                        });
                }
            }

            return init;
        })();

        var statement = new StudentLibStatement();

        $(function() {
            statement.initPagination();
            statement.query();
        });
    </script>
}
